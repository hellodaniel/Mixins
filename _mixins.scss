


// Bootstrap breakpoints
@mixin breakpoint($class) {
	
  @if $class == xs {
    @media (max-width: 767px) { @content; }
  }
 
  @else if $class == sm {
    @media (min-width: 768px) { @content; }
  }
 
  @else if $class == sm-max {
    @media (max-width: 991px) { @content; }
  }
 
  @else if $class == md {
    @media (min-width: 992px) { @content; }
  }
 
  @else if $class == md-max {
    @media (max-width: 1199px) { @content; }
  }
 
  @else if $class == lg {
    @media (min-width: 1200px) { @content; }
  }
  
  @else if $class == lg-max {
    @media (max-width: 1329px) { @content; }
  }
  
  @else if $class == xl {
    @media (min-width: 1330px) { @content; }
  } 
  
  @else {
    @warn "Breakpoint mixin supports: xs, sm, sm-max, md, md-max, lg, lg-max, xl";
  }
  
}


@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}


@mixin transition-all($time: 200ms) {
	-webkit-transition: all $time ease-out;
	transition: all $time ease-out;
}


@mixin transition-none() { 
    -webkit-transition: none !important;
       -moz-transition: none !important;
         -o-transition: none !important;
        -ms-transition: none !important;
            transition: none !important;
}


@mixin transform($tranformation) {
	   -moz-transform: $tranformation;
	-webkit-transform: $tranformation;
	     -o-transform: $tranformation;
	    -ms-transform: $tranformation;
	        transform: $tranformation;
}

// Shortcut for scale transforms... 
@mixin scale ($scale: 1.25) {
   @include transform( scale($scale) ); 
}


@mixin transition-bounce(){
	-webkit-transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1); /* older webkit */
-webkit-transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275); 
   -moz-transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275); 
     -o-transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275); 
        transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275); /* easeOutBack */
}


// Gradients 
// Ana says keep it simple: \
// @link http://codepen.io/thebabydino/full/pjxVWp/
@mixin gradient-vertical($top,$bottom){
	background: $top; // old browsers
	background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); // Chrome 10-25, Safari 5.1-6
	background: linear-gradient(to bottom,  $top 0%,$bottom 100%); // W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ 
}

@mixin gradient-horizontal($left,$right){
	background: $left;  // old browsers
	background: -webkit-linear-gradient(left,  $left 0%,$right 100%);  // Chrome 10-25, Safari 5.1-6
	background: linear-gradient(to right,  $left 0%,$right 100%); // W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ 
}



// Place holder text
// Example usage: input { @include placeholder {color: #FFF;} }
@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}  
}


// Text selection... 
// Example usage: body { @include selection {color: #FFF; background: #000;} }
@mixin selection {
    * ::selection {
      text-shadow: none; 
      @content 
      
    }
    * ::-moz-selection {
      text-shadow: none; 
      @content
      
    } 
}


// Apply Webkit and Firefox font smoothing to make it pretty...
@mixin font-smoothing {
    -webkit-font-smoothing: subpixel-antialiased;
   -moz-osx-font-smoothing: auto;
   text-rendering: optimizelegibility;
}


// Great for admin interfaces to move toward a feeling of OS convergence
// Here's a really good read: 
// https://medium.com/@mwichary/system-shock-6b1dc6d6596f
@mixin system-font {
   font-family: -apple-system, ".SFNSText-Regular", "San Francisco", "Roboto", "Segoe UI", "Helvetica Neue", "Lucida Grande", sans-serif;
}


// Easy greyscale filter
@mixin greyscale {
   filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale"); /* Firefox 10+, Firefox on Android */
    filter: gray; /* IE6-9 */
    -webkit-filter: grayscale(100%); /* Chrome 19+, Safari 6+, Safari 6+ iOS */
}

// Create a set of animation delays at various intervals
@mixin animate-delay ($interval: 0.25s, $iterations: 10, $class: 'animate-delay-') {
  
  @for $i from 1 through $iterations {
    .#{$class}#{$i} { 
      	animation-delay: $interval*$i;
-webkit-animation-delay: $interval*$i; 
    -ms-animation-delay: $interval*$i;   
     -o-animation-delay: $interval*$i;
   -moz-animation-delay: $interval*$i;
    }
  }
}




